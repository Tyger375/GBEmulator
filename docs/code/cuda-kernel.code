__global__ void cuda_build_video(
        Byte* video,
        Uint32* scaled_video,
        int scale
        ) {
    u32 pos = blockIdx.y * DISPLAY_WIDTH + blockIdx.x;
    u32 scaled_pos = (blockIdx.y * scale + threadIdx.y) * (DISPLAY_WIDTH * scale) + (blockIdx.x * scale + threadIdx.x);
    scaled_video[scaled_pos] = color_to_rgb(video[pos]);
}

void build_video(
        Byte* device_video,
        Uint32* device_scaled_video,
        Byte* video,
        Uint32* scaled_video,
        u32 width,
        u32 height,
        int scale
) {
    u32 new_width = width * scale;
    u32 new_height = height * scale;


    cudaMemcpy(
            device_video,
            video,
            (width * height) * sizeof(Byte),
            cudaMemcpyHostToDevice
            );

    dim3 video_dim(width, height);
    dim3 scale_dim(scale, scale);
    cuda_build_video<<<video_dim, scale_dim>>>(device_video, device_scaled_video, scale);

    cudaMemcpy(
            scaled_video,
            device_scaled_video,
            (new_width * new_height) * sizeof(Uint32),
            cudaMemcpyDeviceToHost
    );
}